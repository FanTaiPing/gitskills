<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper  用来管理DAO接口
namespace:当前mapper文件管理的是那个DAO接口(包，接口名)
-->
<mapper namespace="com.fan.dao.UserDao">
    <!--  查询：select标签
           id：接口中的方法名(唯一，不能重载)
           parameterType:参数类型
           resultType：处理结果集 自动封装
           注意：sql语句后不要出现";"号
           增删改不需要返回值类型resultType,参数为实体类对象
      -->
    <!--  注意：查询所有结果多个 resultType 还是使用要封装的实体类的全限定名(包，类)  -->
    <select id="findAll" resultType="com.fan.entity.Users">
        select id, username, age, salary, telephone
        from user
    </select>

    <insert id="insertUser" parameterType="Users" keyProperty="id" useGeneratedKeys="true">
        insert into `user`(username, age, salary, telephone)
        values (#{username}, #{age}, #{salary}, #{telephone})
    </insert>

    <select id="getUserById" parameterType="int" resultType="Users">
        select id, username, age, salary, telephone
        from user
        where id = #{id}
    </select>

    <update id="updateUser" useGeneratedKeys="true" keyProperty="id" parameterType="Users">
        update user
        <set>
            <if test="username !=null and '' != username">
                username = #{username},
            </if>
            <if test="age !=null">
                age =#{age},
            </if>
            <if test="salary != null">
                salary=#{salary},
            </if>
            <if test="telephone != null and '' !=telephone">
                telephone =#{telephone},
            </if>
        </set>
        where id =#{id}
    </update>

    <delete id="delUser" parameterType="int">
        delete
        from user
        where id = #{id}
    </delete>

    <select id="findLikeUsernameOrTelephone" resultType="Users">
        select id, username, age, salary, telephone
        from user
        <where>
            <if test="username != null and '' != username">
                `username` like concat('%',#{username},'%')
            </if>
            <if test="telephone != null and '' != telephone">
                or telephone like concat('%',#{telephone},'%')
            </if>
        </where>
    </select>
</mapper>