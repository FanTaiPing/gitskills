<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper  用来管理DAO接口
namespace:当前mapper文件管理的是那个DAO接口(包，接口名)
-->
<mapper namespace="com.fan.dao.BookDao">
    <!--  查询：select标签
           id：接口中的方法名(唯一，不能重载)
           parameterType:参数类型
           resultType：处理结果集 自动封装
           注意：sql语句后不要出现";"号
           增删改不需要返回值类型resultType,参数为实体类对象
      -->
    <!--  注意：查询所有结果多个 resultType 还是使用要封装的实体类的全限定名(包，类)  -->
    <select id="findAllBook" resultType="com.fan.entity.Book">
        select id,
               Name,
               Author,
               publish,
               publish_date,
               page,
               price,
               content
        from Book
    </select>

    <insert id="addBook" parameterType="Book" useGeneratedKeys="true" keyProperty="id">
        insert into `book`(Name, Author, publish, publish_date, page, price, content)
        values (#{name}, #{author}, #{publish}, #{publish_date}, #{page}, #{price}, #{content})
    </insert>

    <select id="getBookById" parameterType="int" resultType="Book">
        select id,
               Name,
               Author,
               publish,
               publish_date,
               page,
               price,
               content
        from Book
        where id = #{id}
    </select>

    <update id="updateBook" parameterType="Book">
        update `book`
        <set>
            <if test="Name != null and '' != Name">
                `Name` = #{name},
            </if>
        </set>
        <set>
            <if test="Author != null and '' != Author">
                Author =#{author},
            </if>
        </set>
        <set>
            <if test="publish != null and '' != publish">
                publish =#{publish},
            </if>
        </set>
        <set>
            <if test="publish_date != null and '' != publish_date">
                publish_date =#{publish_date},
            </if>
        </set>
        <set>
            <if test="page != null">
                page =#{page},
            </if>
        </set>
        <set>
            <if test="price != null">
                price =#{price},
            </if>
        </set>
        <set>
            <if test="content != null and '' != content">
                content =#{content},
            </if>
        </set>
        where id =#{id}
    </update>
</mapper>