<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper  用来管理DAO接口
namespace:当前mapper文件管理的是那个DAO接口(包，接口名)
-->
<mapper namespace="com.fan.dao.UserDao">
    <!--  查询：select标签
           id：接口中的方法名(唯一，不能重载)
           parameterType:参数类型
           resultType：处理结果集 自动封装
           注意：sql语句后不要出现";"号
           增删改不需要返回值类型resultType,参数为实体类对象
      -->
    <!--  注意：查询所有结果多个 resultType 还是使用要封装的实体类的全限定名(包，类)  -->
    <select id="findAllUser" resultType="com.fan.entity.User">
        select id, name,bir,address,sex
        from users
    </select>
    <!--${}相当于Statement对象的拼接字符串，会sql注入；#()相当于PreparedStatement占位符填充-->
    <!--parameterType="int" 参数类型 resultType返回结果类型-->
    <select id="getUserById" parameterType="int" resultType="com.fan.entity.User">
        select id, name, bir,address,sex
        from users
        where id = #{id}
    </select>

    <select id="getUserByIdAndName" parameterType="com.fan.entity.User" resultType="com.fan.entity.User">
        select id, `name`, bir,address,sex
        from users
        where id = #{id}/*{id}和dao里面的Param("id")中的id对应*/
          and `name` = #{name}
    </select>
<!--  resultType:返回值类型是int 没有参数  -->
    <select id="count" resultType="int">
        select count(1)
        from users
    </select>
    <!--  useGeneratedKeys="true" keyProperty="id" 代表使用mysql的自增<只有使用mysql数据库生效> -->
    <insert id="insertUser" parameterType="com.fan.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into `users`(`name`,bir,address,sex)
        values (#{name}, #{bir},#{address},#{sex})
    </insert>
    <update id="updateUser" parameterType="com.fan.entity.User">
        <!--第一种写法：写死的(适用于最简单普通的update语句)
        update t_emp
        set age = #{age}
        where id = #{id}-->
        <!--     第二种写法：用set标签和if标签来判断填充(稍微复杂的update多条件拼接语句)
                update t_emp
                <set>
                    <if test="age !=null">
                        age =#{age},
                    </if>
                </set>
                    where id =#{id}-->

        <!--第三种写法：用自定义的标签来控制<trem>
        if test 里面属性name为对象的属性名
        prefix前缀前面加上SET,suffixOverrides=去掉sql语句里最后一个逗号，
        suffix= 在最后面增加 where id = #{id}-->
        update users
        <trim prefix="SET" suffixOverrides="," suffix="where id =#{id}">
            <if test="name !=null and name !=''">
                name = #{name},
            </if>
            <if test="bir != null and bir !=''">
                bir = #{bir},
            </if>
            <if test="address !=null and address !=''">
                address = #{address},
            </if>
            <if test="sex != null and sex !=''">
                sex = #{sex},
            </if>
        </trim>
    </update>
    <delete id="deleteUser" parameterType="com.fan.entity.User">
        delete
        from users
        where id = #{id};
    </delete>
</mapper>